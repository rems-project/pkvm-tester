#!/bin/sh

# export OCAMLRUNPARAM=b,t

NVHE_LOGGER_GRACE=0
GCOV="/sys/kernel/debug/gcov_nvhe"

## init ##

/bin/busybox --install -s
export PATH="$PATH:/usr/bin:/bin:/usr/sbin:/sbin"

[ -c /dev/null ] || mknod -m 666 /dev/null c 1 3

mount -t sysfs -o noexec,nosuid,nodev sysfs /sys
mount -t debugfs debugfs /sys/kernel/debug
mount -t devtmpfs -o exec,nosuid,mode=0755,size=2M devtmpfs /dev 2>/dev/null \
  || mount -t tmpfs -o exec,nosuid,mode=0755,size=2M tmpfs /dev

[ -c /dev/kmsg ] || mknod -m 660 /dev/kmsg c 1 11

mount -t proc -o noexec,nosuid,nodev proc /proc

[ -c /dev/ptmx ] || mknod -m 666 /dev/ptmx c 5 2

[ -d /dev/pts ] || mkdir -m 755 /dev/pts
mount -t devpts -o gid=5,mode=0620,noexec,nosuid devpts /dev/pts

[ -d /dev/shm ] || mkdir /dev/shm
mount -t tmpfs -o nodev,nosuid,noexec shm /dev/shm

[ -d /output ] || mkdir /output
mount -t 9p -o trans=virtio,version=9p2000.L output /output

set -- $(cat /proc/cmdline)

## support ##

function timestamp { echo "+ time ${1}: $(cut -f1 -d' ' < /proc/uptime)"; }

timestamp "boot"

cp /proc/config.gz /output/ || exit 1

# Start the NVHE logger
if [ -r /sys/kernel/debug/nvhe.log ]; then
  cat < /sys/kernel/debug/nvhe.log > /output/nvhe.log &
  NVHE_LOGGER=$!
  echo -e "\nStarted NVHE logger."
fi

if [ -d $GCOV ]; then
  tar cpzf /output/gcov-00-boot.tar.gz . -C $GCOV --exclude=reset
  echo > ${GCOV}/reset
fi

timestamp "inits"

## payloads ##

echo -e '\n'$(uname -a)
echo -e "\n\e[1mStarting pKVM tester.\e[0m\n"

cd payload

export OCAMLRUNPARAM=b

for prog in ./*; do
  if [[ -x $prog ]]; then
    echo -e "- \e[1mrunning ${prog}:\e[0m"
    if ! $prog; then
      echo -e "\e[31mError running ${prog}.\e[0m\n"
      sync -f /output
      reboot -n -f
    fi
  fi
done

echo -e "\e[1mAll tests successful.\e[0m\n"

timestamp "tests"

## shutdown ##

if [ -d $GCOV ]; then
  tar cpzf /output/gcov-01-payload.tar.gz . -C $GCOV --exclude=reset
fi

sync -f /output
reboot -n -f
