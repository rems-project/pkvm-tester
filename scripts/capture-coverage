#!/bin/zsh
set -e

# This is meant to be run right after executing tests.
#
# It consumes *.gcda files (produced during the run), and *.gcno files (produced
# as part of the build), and produces lcov *.info files.
#
# Since the *.gcno must match the *.gcda, the build directory needs to be in the
# same state it was when building the corresponding kernel — running make in
# between can generate *.gcno files incompatible with the *.gcda files that the
# kernel produces.
# 
# Usage: ${0} OUTPUT-DIR

lcovargs=(
  --gcov-tool=llvm-cov,gcov 
  --capture --all 
  --branch-coverage
  -q
)

eecho() { echo $@ >&2; }
output="$1"
[[ -d $output ]] || { eecho "$output: not a dir"; exit 1; }
[[ -x =lcov ]] || { eecho "Cannot find `lcov` — not installed?"; exit 1; }
[[ -x =llvm-cov ]] || { eecho "Cannot find `llvm-cov` — not installed?"; exit 1; }

gcovs=( $output/gcov-*.tar.gz(N) )
(( $#gcovs == 0 )) && exit 0

tmp=$(mktemp -d --suff="-gcov") || exit 127

for gcov in $gcovs; do
  echo "Capturing: ${gcov:t}"
  dir=$tmp/${gcov:t:r:r}
  mkdir $dir
  tar xf $gcov -C $dir
  links=( $dir/**/arch/arm64/**/*.c(@:A) )
  base=$(sed -e 's:/arch/arm64/.*::' <<< $links[1])
  lcov $lcovargs -d $dir -b $base -o ${gcov:r:r}.info
done

[[ -d $tmp ]] && rm -rf $tmp

echo "Combining: aggregate.info"
lcov -q --branch-coverage --add-tracefile=${^gcovs:r:r}.info -o $output/gcov-99-aggregate.info
